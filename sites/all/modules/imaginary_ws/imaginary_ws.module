<?php

/**
 * Implementation of hook_menu()
 */
function imaginary_ws_menu() {

  $items['api/snapshots.json'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'imaginary_ws_snapshots_list',
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Returns the tid for the 'published' snapshot status
 * @return string
 */
function _imaginary_ws_snapshots_get_published_tid() {

  $published_tid = &drupal_static(__FUNCTION__);

  if(!isset($published_tid)) {

    $vocabulary = taxonomy_vocabulary_machine_name_load('snapshots_status');
    $terms = taxonomy_get_tree($vocabulary->vid);
    foreach ($terms as $term) {
      if ($term->name == 'published') {
        $published_tid = $term->tid;
      }
    }
  }

  return $published_tid;
}

function imaginary_ws_snapshots_list() {

  $output = array(
    'snapshots' => array(),
  );

  $nodes = node_load_multiple(array(), array(
    'type' => 'snapshot',
    'status' => 1,
  ));

  foreach($nodes as $node) {
    $status = field_get_items('node', $node, 'field_status');
    if($status[0]['tid'] != _imaginary_ws_snapshots_get_published_tid()) {
      continue;
    }

    $authors = array();
    $author_ids = field_get_items('node', $node, 'field_collection_person');
    foreach($author_ids as $author_id) {
      $author = entity_load('field_collection_item', array($author_id['value']));
      $author = $author[$author_id['value']];

      $first_name = field_get_items('field_collection_item', $author, 'field_person_first_name');
      $last_name = field_get_items('field_collection_item', $author, 'field_person_last_name');

      $author_name = array();
      if (isset($first_name[0]['value'])) {
        $author_name[] = $first_name[0]['value'];
      }
      if (isset($last_name[0]['value'])) {
        $author_name[] = $last_name[0]['value'];
      }

      $authors[] = implode(' ', $author_name);
    }

    $pdf = field_get_items('node', $node, 'field_pdf');
    $doi = field_get_items('node', $node, 'field_doi_computed');

    $output['snapshots'][] = array(
      'title' => $node->title,
      'url' => url("node/{$node->nid}", array('absolute' => true)),
      'url_short' => url("node/{$node->nid}", array('absolute' => true, 'alias' => true)),
      'pdf' => file_create_url($pdf[0]['uri']),
      'authors' => $authors,
      'doi' => $doi[0]['value']
    );
  }

  drupal_add_http_header('Content-Type', 'application/json');
  print str_replace('\\/', '/', json_encode($output, JSON_PRETTY_PRINT));
  exit;
}